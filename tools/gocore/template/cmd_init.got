<%: func FromCmdInit(name, pkgs, dbUpdate, initDb string, buffer *bytes.Buffer) %>
package cmd

import (
	<%= pkgs %>
	"<%= name %>/conf"

	"github.com/sunmi-OS/gocore/v2/conf/nacos"
	"github.com/sunmi-OS/gocore/v2/db/orm"
	"github.com/sunmi-OS/gocore/v2/db/redis"
	"github.com/sunmi-OS/gocore/v2/glog"
	"github.com/sunmi-OS/gocore/v2/utils"
)

func initConf() {
	switch utils.GetRunTime() {
	case "local":
		nacos.SetLocalConfig(conf.LocalConfig)
	default:
		nacos.NewAcmEnv()
	}

	vt := nacos.GetViper()
	vt.SetBaseConfig(conf.BaseConfig)
	vt.SetDataIds(conf.ProjectName, "config", "mysql", "redis")
	// 注册配置更新回调
 	vt.SetCallBackFunc(conf.ProjectName, "mysql", func(namespace, group, dataId, data string) {
		<%= dbUpdate %>
	})
	vt.NacosToViper()
}

// initDB 初始化DB服务 （内部方法）
func initDB() {
	<%= initDb %>
}