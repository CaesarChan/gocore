// Code generated by hero.
// source: /Users/SM0286/code/core/gocore/tools/gocore/template/cmd_init.got
// DO NOT EDIT!
package template

import (
	"bytes"
)

func FromCmdInit(name, pkgs, dbUpdate, initDb string, buffer *bytes.Buffer) {
	buffer.WriteString(`
package cmd

import (

	`)
	buffer.WriteString(pkgs)
	buffer.WriteString(`
	"`)
	buffer.WriteString(name)
	buffer.WriteString(`/conf"

	"github.com/sunmi-OS/gocore/v2/conf/nacos"
	"github.com/sunmi-OS/gocore/v2/db/orm"
	"github.com/sunmi-OS/gocore/v2/glog"
	"github.com/sunmi-OS/gocore/v2/utils"
)

func initConf() {
	switch utils.GetRunTime() {
	case "local":
		nacos.SetLocalConfig(conf.LocalConfig)
	default:
		nacos.NewAcmEnv()
	}

	vt := nacos.GetViper()
	vt.SetBaseConfig(conf.BaseConfig)
	vt.SetDataIds(conf.ProjectName, "mysql", "redis", "rocketmq", "config")
 	vt.SetCallBackFunc(conf.ProjectName, "mysql", func(namespace, group, dataId, data string) {`)
	buffer.WriteString(dbUpdate)
	buffer.WriteString(`
	})
	vt.NacosToViper()
}

// initDB 初始化DB服务 （内部方法）
func initDB() {
	`)
	buffer.WriteString(initDb)
	buffer.WriteString(`
		closes.AddShutdown(closes.ModuleClose{
		Name:     "mysql",
		Priority: 0,
		Func:     orm.Close,
	})
}`)

}
